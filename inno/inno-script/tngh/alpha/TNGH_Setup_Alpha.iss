; khai bao VTCPlusSign tren innosetup compiler VTCPlusSign=signtool.exe sign /a /tr http://timestamp.globalsign.com/tsa/r6advanced1 /td SHA256 /fd SHA256 $f
; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!
; https://github.com/jrsoftware/issrc/blob/main/Examples/CodeDownloadFiles.iss

;#define MyAppName "Tieu Ngao Giang Ho VTC"
;#define MyAppVerName "Tieu Ngao Giang Ho VTC Setup"
;#define MyAppPublisher "Tieu Ngao Giang Ho VTC"
;#define MyAppURL "http://vtc.org.vn"
;#define MyAppExeName "TieuNgaoGiangHoVTC.exe"

#ifndef rsBP
	#define rsBP="Default rsbp"
#endif

#ifndef url
	#define url="http://vtc.org.vn"
#endif

#ifndef outputDirectory
	#define outputDirectory="Default outputDirectory"
#endif

#ifndef BuildSourcePath
	#define BuildSourcePath="Default BuildSourcePath"
#endif

#ifndef OutputSetupFilename
	#define OutputSetupFilename="Default OutputSetupFilename"
#endif

#ifndef eventTypePrefix
	#define eventTypePrefix="TNGH_W10_B2C_1.0.0.1W10b1112092025p"
#endif

[Setup]                                                                                     
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
PrivilegesRequired=admin
PrivilegesRequiredOverridesAllowed=dialog
SignTool=VTCPlusSign
AppId={{6BD22BA3-CD68-666B-86BD-88D66EA88E8C}}
AppName=Tieu Ngao Giang Ho VTC
AppVerName=Tieu Ngao Giang Ho VTC 
AppPublisher=Tieu Ngao Giang Ho VTC
AppPublisherURL={#url}
AppSupportURL={#url}
AppUpdatesURL={#url}
DefaultDirName={sd}\VTC\Tieu Ngao Giang Ho VTC
DefaultGroupName=Tieu Ngao Giang Ho VTC
DisableProgramGroupPage=true

OutputDir={#outputDirectory}
OutputBaseFilename={#OutputSetupFilename}
SetupIconFile={#rsBP}\inno\inno-images\tngh\Iconapp.ico

UninstallIconFile={#rsBP}\inno\inno-images\tngh\uninstall.ico
Compression=lzma
SolidCompression=yes
WindowVisible=false
WizardImageFile={#rsBP}\inno\inno-images\tngh\Iconapp-medium.bmp
WizardSmallImageFile={#rsBP}\inno\inno-images\tngh\Iconapp-small.bmp
DirExistsWarning=no
UsePreviousAppDir=false
;DiskSpanning=yes
;DiskSliceSize=2100000000
AppendDefaultDirName=no
UninstallFilesDir={app}\uninstall

LZMAUseSeparateProcess=yes
LZMANumBlockThreads=12
SignedUninstaller=yes

[Languages]
;Name: english; MessagesFile: compiler:Default.isl
Name: "vietnamesedone"; MessagesFile: "compiler:Languages\VietnameseTNGH.isl"

[Tasks]
Name: desktopicon; Description: {cm:CreateDesktopIcon}; GroupDescription: {cm:AdditionalIcons}; 
;Flags: checked

[Files]
Source: {#rsBP}\vc_redist\VC_redist.x64.exe; DestDir: "{tmp}"; Flags: deleteafterinstall; Check: IsWin64
Source: {#rsBP}\vc_redist\VC_redist.x86.exe; DestDir: "{tmp}"; Flags: deleteafterinstall; Check: not IsWin64
Source: {#BuildSourcePath}\*; DestDir: {app}; Flags: ignoreversion recursesubdirs createallsubdirs
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: {group}\Tieu Ngao Giang Ho VTC; Filename: {app}\TieuNgaoGiangHoVTC.exe; WorkingDir: {app}
Name: {group}\Uninstall;IconFileName:{#rsBP}\inno\inno-images\uninstall.ico; Filename: {uninstallexe}
Name: {userdesktop}\Tieu Ngao Giang Ho VTC; Filename: {app}\TieuNgaoGiangHoVTC.exe; WorkingDir: {app}; Tasks: desktopicon
Name: {userappdata}\Microsoft\Internet Explorer\Quick Launch\Tieu Ngao Giang Ho VTC; Filename: {app}\TieuNgaoGiangHoVTC.exe; WorkingDir: {app}

[Run]
Filename: "{tmp}\vc_redist.x86.exe"; Parameters: "/quiet /norestart"; StatusMsg: "Installing Visual C++ redistributable..."; Check: not IsWin64
Filename: "{tmp}\vc_redist.x64.exe"; Parameters: "/quiet /norestart"; StatusMsg: "Installing Visual C++ redistributable..."; Check: IsWin64
Filename: {app}\TieuNgaoGiangHoVTC.exe; Description: {cm:LaunchProgram,Tieu Ngao Giang Ho VTC}; Flags: nowait postinstall skipifsilent runasoriginaluser

[Registry]
Root: HKCR; Subkey: "VTC"; ValueType: "string"; ValueData: "URL:Custom Protocol"; Flags: uninsdeletekey
Root: HKCR; Subkey: "VTC"; ValueType: "string"; ValueName: "URL Protocol"; ValueData: ""
Root: HKCR; Subkey: "VTC\DefaultIcon"; ValueType: "string"; ValueData: "{app}\TieuNgaoGiangHoVTC.exe,0"
Root: HKCR; Subkey: "VTC\shell\open\command"; ValueType: "string"; ValueData: """{app}\TieuNgaoGiangHoVTC.exe"" ""%1"""

[Code]
var
DownloadPage: TDownloadWizardPage;

const
  HTTPREQUEST_SETCREDENTIALS_FOR_SERVER = 0;
  HTTPREQUEST_SETCREDENTIALS_FOR_PROXY = 1;

function HttpPost(url: string; data: string): string;
var
  httpRequest: Variant;
begin
  httpRequest := CreateOleObject('WinHttp.WinHttpRequest.5.1');
  httpRequest.Open('POST', url, false);
  
  // Set the custom header
  httpRequest.SetRequestHeader('Content-Type', 'application/json');
  
  httpRequest.Send(AddBackslash(data));

  Result := httpRequest.ResponseText;
end;

procedure CallApiAfterInstall;
var
  apiResponse: string;
  apiUrl: string;
  postData: string;
begin
  // Specify your API URL
  apiUrl := 'https://apivtcplus1.vtcgame.vn/tracking/events';

  // Specify the data to be sent in the request body
  postData := '{' +
    '"type": "{#eventTypePrefix}_INSTALL",' +
    '"deviceToken": "",' +
    '"deviceType": 1,' +
    '"manufacture": "",' +
    '"modelName": "",' +
    '"operatingSystem": "Windows",' +
    '"screenResolution": "",' +
    '"accountId": "",' +
    '"accountName": "",' +
    '"version": "1.0.0.45",' +
    '"game": "TNGH"' +                                                                                                          
    '}';

  // Make the API request using the POST method
  apiResponse := HttpPost(apiUrl, postData);

  // Log the API call and response
  //LogApiCallInstall(apiUrl, apiResponse);

end;

procedure CallApiOnUninstall;
var
  apiUrl: string;
  postData: string;
  apiResponse: string;
  
begin
  // Specify your API URL
  apiUrl := 'https://apivtcplus1.vtcgame.vn/tracking/events';

  // Specify the data to be sent in the request body
  postData := '{' +
    '"type": "{#eventTypePrefix}_UNINSTALL",' +
    '"deviceToken": "",' +
    '"deviceType": 1,' +
    '"manufacture": "",' +
    '"modelName": "",' +
    '"operatingSystem": "Windows",' +
    '"screenResolution": "",' +
    '"accountId": "",' +
    '"accountName": "",' +
    '"version": "1.0.0.45",' +
    '"game": "TNGH"' +
    '}';

  // Make the API request using the POST method
  apiResponse := HttpPost(apiUrl, postData);

  // Log the API call and response
  //LogApiCallUnInstall(apiUrl, apiResponse);

  // Process the API response as needed
  // ...
end;

procedure CurStepChanged(CurStep: TSetupStep);
begin
  // Check if the installation is complete and the user is on the post-installation page
  if (CurStep = ssPostInstall) and (WizardForm.NextButton.Enabled) then
  begin
    // Call the API after a successful installation
    CallApiAfterInstall;
  end;
end;

procedure CurUninstallStepChanged(CurUninstallStep: TUninstallStep);
begin
  // Check if the user is on the post-uninstallation page
  if CurUninstallStep = usPostUninstall then
  begin
    // Call the API when the user clicks to uninstall the application
    CallApiOnUninstall;
  end;
end;

function OnDownloadProgress(const Url, FileName: String; const Progress, ProgressMax: Int64): Boolean;
begin
  if Progress = ProgressMax then
    Log(Format('Successfully downloaded file to {tmp}: %s', [FileName]));
  Result := True;
end;

procedure InitializeWizard;
begin
  { Set position of the small wizard image }
  WizardForm.WizardSmallBitmapImage.Left := 655;  // Adjust the left position
  WizardForm.WizardSmallBitmapImage.Top := 0;    // Adjust the top position
  WizardForm.NoRadio.Checked := True;
end;